package com.timesheet.model;

import static javax.persistence.GenerationType.IDENTITY;

import java.time.LocalDate;
// default package
// Generated Nov 17, 2017 7:39:13 PM by Hibernate Tools 5.2.3.Final
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name = "employee", catalog = "timesheet")
public class Employee implements java.io.Serializable {


	private static final long serialVersionUID = -5459270619631800339L;
	
	private Integer empId;
	@JsonIgnore
	private Organisation organisation;
	private String empName;
	private LocalDate joinDate;
	private String gender;
	private String designation;
	private String email;
	
	private Set<TimeLog> logs = new HashSet<TimeLog>(0);
	
	public void addLog(TimeLog log){
		this.logs.add(log);
	}

	public Employee() {
	}

	public Employee( String empName, LocalDate joinDate, String gender, String designation,
			String email) {
		this.empName = empName;
		this.joinDate = joinDate;
		this.gender = gender;
		this.designation = designation;
		this.email = email;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "emp_id", unique = true, nullable = false)
	public Integer getEmpId() {
		return this.empId;
	}

	public void setEmpId(Integer empId) {
		this.empId = empId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "org_id")
	public Organisation getOrganisation() {
		return this.organisation;
	}

	public void setOrganisation(Organisation organisation) {
		this.organisation = organisation;
	}

	@Column(name = "emp_name", length = 45)
	public String getEmpName() {
		return this.empName;
	}

	public void setEmpName(String empName) {
		this.empName = empName;
	}

	@Column(name = "join_date", length = 10)
	public LocalDate getJoinDate() {
		return this.joinDate;
	}

	public void setJoinDate(LocalDate joinDate) {
		this.joinDate = joinDate;
	}

	@Column(name = "gender", length = 10)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Column(name = "designation", length = 45)
	public String getDesignation() {
		return this.designation;
	}

	public void setDesignation(String designation) {
		this.designation = designation;
	}

	@Column(name = "email", length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@OneToMany(mappedBy="employee", fetch=FetchType.LAZY)
	public Set<TimeLog> getLogs() {
		return logs;
	}

	public void setLogs(Set<TimeLog> logs) {
		this.logs = logs;
	}
	

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("Employee [empId=").append(empId).append(", empName=").append(empName).append(", joinDate=")
				.append(joinDate).append(", gender=").append(gender).append(", designation=").append(designation)
				.append(", email=").append(email).append(", logs=").append(logs.size()).append("]");
		return builder.toString();
	}
	
}
